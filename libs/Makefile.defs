SYSTEM_MODULE = System
SYSTEM_MODULE_PARTITIONS = \
						EventArgs \
						IComparable \
						Private_Delegate \
						Private_enum \
						Exception \
						ValueTuple \
						Base \
						Base64FormattingOptions \
						ConsoleColor \
						ConsoleKey \
						ConsoleModifiers \
						DateTimeKind \
						DayOfWeek \
						EnvironmentVariableTarget \
						PlatformID \
						TypeCode \
						EventHandler \
						Action \
						Comparison \
						Converter \
						Func \
						Predicate \
						Concepts

SYSTEM_MODULE_INTERFACE_SRC = $(SYSTEM_MODULE)/$(SYSTEM_MODULE).ixx
SYSTEM_MODULE_INTERFACE_OBJ = $(SYSTEM_MODULE).o

SYSTEM_MODULE_PARTITION_SRCS := $(SYSTEM_MODULE_PARTITIONS:%=System/%.ixx)
SYSTEM_MODULE_PARTITION_OBJS := $(SYSTEM_MODULE_PARTITION_SRCS:%.ixx=%.o)
SYSTEM_MODULE_DEPS := $(SYSTEM_MODULE_PARTITION_OBJS:%.o=%.d)
NORMALIZED_DEPS := $(SYSTEM_MODULE_DEPS:%.d=%.normalized.d)

#SYSTEM_MODULE_BUILT_OBJS := $(SYSTEM_MODULE_OBJS:%.o=$(BUILD_DIR)/%.o)

COMPILER_DEFAULT_SEARCH_DIRS = $(shell g++ -v -x c++ -E /dev/null 2>/dev/stdout 1>/dev/null | awk '/#include <...> search starts here:/ {flag=1; next} /End of search list./ {flag=0} flag')

# NOTE: The following variable is to get around g++ crashes when generating header units.
#       This process of compiling them is order-dependent, so I created this variable so
#       that the exact order could be tweaked.
#       It is derived from the output of "./list_system_includes "$(LIB_HDRS)".
SYSTEM_COMPILER_HEADER_UNITS_BUILD_ORDER = algorithm any array bit cassert cctype charconv chrono cmath compare concepts cstddef cstdint cstdlib cstring ios filesystem format exception system_error functional initializer_list iosfwd iterator limits list map memory mutex numbers optional ranges set source_location span stack stdexcept string string_view utility tuple type_traits unordered_map unordered_set variant vector
SYSTEM_HEADER_UNITS_BUILD_ORDER = uuid/uuid.h

SYSTEM_COMPILER_HEADER_FILE_DIR = $(shell echo "$(COMPILER_DEFAULT_SEARCH_DIRS)" | cut -f 2 -d" " | head -n1)
SYSTEM_HEADER_FILE_DIR = /usr/include

SYSTEM_COMPILER_HEADER_UNIT_MODULES  = $(SYSTEM_COMPILER_HEADER_UNITS_BUILD_ORDER:%=$(SYSTEM_COMPILER_HEADER_FILE_DIR)/%.c++m)
SYSTEM_COMPILER_HEADER_UNIT_GCM_FILES  = $(SYSTEM_COMPILER_HEADER_UNITS_BUILD_ORDER:%=%.gcm)
SYSTEM_COMPILER_HEADER_UNIT_GCMS_FILES = $(SYSTEM_COMPILER_HEADER_UNITS_BUILD_ORDER:%=%.gcms)

SYSTEM_HEADER_UNIT_MODULES  = $(SYSTEM_HEADER_UNITS_BUILD_ORDER:%=$(SYSTEM_HEADER_FILE_DIR)/%.c++m)
SYSTEM_HEADER_UNIT_GCM_FILES = $(SYSTEM_HEADER_UNITS_BUILD_ORDER:%=%.gcm)
SYSTEM_HEADER_UNIT_GCMS_FILES = $(SYSTEM_HEADER_UNITS_BUILD_ORDER:%=%.gcms)

SYSTEM_COMPILER_HEADER_CACHE_DIR = $(HEADER_UNIT_CACHE_DIR)$(SYSTEM_COMPILER_HEADER_FILE_DIR)
SYSTEM_HEADER_CACHE_DIR = $(HEADER_UNIT_CACHE_DIR)$(SYSTEM_HEADER_FILE_DIR)

# Macro to normalize a .d file in-place or to a temp file.
# Changes lines containing 'System:Span.c++m' to 'System\:Span.c++m'.
# This allows the make program to parse the string as a filename and
# thus not become confused if this type of string is a target followed
# by the separating ':' (thus thinking the colon in the filename was the colon).
NORMALIZE_DEP_FILE = \
  sed -E 's/([^[:space:]]*):([^[:space:]]*)\.c\+\+m/\1\\:\2.c\+\+m/g' $(1) > $(2)

# MODULE items

CXX_MODULE_PREFIX = gcm.cache

# PATHs
vpath %.hpp include
vpath %.cpp src
vpath %.ixx src

vpath %.gcm  $(SYSTEM_COMPILER_HEADER_CACHE_DIR):$(SYSTEM_HEADER_CACHE_DIR):$(HEADER_UNIT_CACHE_DIR)
vpath %.gcms $(BUILD_DIR)

vpath %.o $(BUILD_DIR)

vpath %.d $(BUILD_DIR)

vpath %.generated $(BUILD_DIR)