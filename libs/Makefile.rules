# MODULE Rules
#%.o : %.cpp
#	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -MMD -MP -c -x c++ $< -o $@

%.o : %.ixx
	$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -c -x c++ $< -o $(BUILD_DIR)/$@

#.PHONY: %.c++m
#%.c++m : %.gcm
#	@echo YO!
#	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -MMD -MP -c -x c++ $<


#$(CXX_MODULE_PREFIX)/%.gcm :| $(BUILD_DIR)/%.o
#	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -MMD -MP -c -x c++ $<

#"%".c++m : $(CXX_MODULE_PREFIX)/%.gcmu
#	@echo Compile USER header unit

#<%>.c++m : %.gcms

#	@echo Compiling System Header Unit $(patsubst <%>.c++m,<%>,$@)
#	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -c -x c++-system-header $(patsubst %.gcm,%,$@)
#	@echo Compile SYSTEM header unit
#	@$(COMPILE.cc) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -x c++-system-header $(patsubst $(SYSTEM_HEADER_FILE_DIR)/%,%,$<)

#$(CXX_MODULE_PREFIX)/%.gcmu : %
#	$(COMPILE.cc) $(call CXX_MODULE_HEADER, "$*") $<

#%.gcms : %
#	$(COMPILE.cc) $(call CXX_MODULE_HEADER, <$*>) $<

# Compiler Header Unit Generation Rule
system_header_units.generated: $(SYSTEM_COMPILER_HEADER_UNIT_MODULES) $(SYSTEM_HEADER_UNIT_MODULES)
	@mkdir -p $(BUILD_DIR)
	@touch $(BUILD_DIR)/$@
	@echo System Header Units Generated!

$(BUILD_DIR) :
	@mkdir -p $(BUILD_DIR)

# Dependencies
dependencies.generated : $(SYSTEM_MODULE_DEPS)
	@touch $(BUILD_DIR)/$@
	@echo System Module Dependencies Generated!

$(SYSTEM_MODULE_DEPS) : system_header_units.generated
	@echo Generating dependency file $@
	@mkdir -p ${dir $(BUILD_DIR)/$@}
	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -MMD -MP -MF $(BUILD_DIR)/$@ -c -x c++ -o $(patsubst %.d,$(BUILD_DIR)/%.o,$@) $(patsubst %.d,$(SRC_DIR)/%.ixx,$@)
	@rm $(patsubst %.d,$(BUILD_DIR)/%.o,$@)

normalized_dependencies.generated : $(NORMALIZED_DEPS)
	@touch $(BUILD_DIR)/$@
	@echo System Module Normalized Dependencies Generated!

$(NORMALIZED_DEPS) : dependencies.generated
	@echo Generating normalized dependency file $@
	@$(call NORMALIZE_DEP_FILE,$(patsubst %.normalized.d,%.d,$(BUILD_DIR)/$@),$(BUILD_DIR)/$@)

Makefile.compiler_header_unit_targets :
# System Header Unit Import Rule
# /usr/include/c++/*/*.c++m (from the compiler's default include paths)
	@for target in $(SYSTEM_COMPILER_HEADER_UNITS_BUILD_ORDER); do \
		echo ".PHONY: $(SYSTEM_COMPILER_HEADER_FILE_DIR)/$${target}.c++m" >> Makefile.compiler_header_unit_targets; \
		echo "$(SYSTEM_COMPILER_HEADER_FILE_DIR)/$${target}.c++m : $(SYSTEM_COMPILER_HEADER_CACHE_DIR)/$${target}.gcm" >> Makefile.compiler_header_unit_targets; \
		echo "" >> Makefile.compiler_header_unit_targets; \
		echo "$(SYSTEM_COMPILER_HEADER_CACHE_DIR)/$${target}.gcm : " >> Makefile.compiler_header_unit_targets; \
		echo "	@echo Compiling System Header Unit \<$$target\>" >> Makefile.compiler_header_unit_targets; \
		echo "	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -c -x c++-system-header $$target" >> Makefile.compiler_header_unit_targets; \
		echo "" >> Makefile.compiler_header_unit_targets; \
	done
	@for target in $(SYSTEM_HEADER_UNITS_BUILD_ORDER); do \
		echo ".PHONY: $(SYSTEM_HEADER_FILE_DIR)/$${target}.c++m" >> Makefile.compiler_header_unit_targets; \
		echo "$(SYSTEM_HEADER_FILE_DIR)/$${target}.c++m : $(SYSTEM_HEADER_CACHE_DIR)/$${target}.gcm" >> Makefile.compiler_header_unit_targets; \
		echo "" >> Makefile.compiler_header_unit_targets; \
		echo "$(SYSTEM_HEADER_CACHE_DIR)/$${target}.gcm : " >> Makefile.compiler_header_unit_targets; \
		echo "	@echo Compiling System Header Unit \<$$target\>" >> Makefile.compiler_header_unit_targets; \
		echo "	@$(CXX) $(CPPFLAGS) $(CXX_STANDARD) $(INC_PARAMS) -fmodules-ts -c -x c++-system-header $$target" >> Makefile.compiler_header_unit_targets; \
		echo "" >> Makefile.compiler_header_unit_targets; \
	done

# Cause any target referencing this to be executed
FORCE: ;
